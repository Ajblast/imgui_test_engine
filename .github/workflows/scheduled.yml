name: Scheduled Tests

on:
  schedule:
    - cron: '40 8 * * *'

jobs:
  Linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch: [master, docking, tables, features/range_select]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libglfw3-dev libsdl2-dev

      - name: Build
        run: |
          make -C test_app/ clean
          make -C test_app/

      - name: Run Tests
        run: |
          timeout 300 test_app/imgui_test_app -nogui -nopause -v2 -ve4 tests

      - name: Build (with SDL2)
        run: |
          make -C test_app/ clean
          make -C test_app/ BACKEND_LIB=sdl2

      - name: Build (with GLFW3)
        run: |
          make -C test_app/ clean
          make -C test_app/ BACKEND_LIB=glfw3

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
          username: GitHub Actions
          color: 0xFF0000
          title: ${{ github.job }}

  MacOS:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        # MacOS minutes are expensive (x10) for private repo so reduce the amount of tests running there for now.
        branch: [docking]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Build
        run: |
          make -C test_app/

      - name: Run Tests
        run: |
          test_app/imgui_test_app -nogui -nopause -v2 -ve4 tests

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
          username: GitHub Actions
          color: 0xFF0000
          title: ${{ github.job }}

  Windows:
    runs-on: windows-latest
    env:
      VS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\

    strategy:
      fail-fast: false
      matrix:
        branch: [docking]
        arch: [Win32, x64]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Fix Projects
        shell: powershell
        run: |
          # WARNING: This will need updating if toolset/sdk change in project files!
          gci -recurse -filter "*.vcxproj" | ForEach-Object {
            # Fix SDK and toolset for most samples.
            (Get-Content $_.FullName) -Replace "<PlatformToolset>v110</PlatformToolset>","<PlatformToolset>v142</PlatformToolset>" | Set-Content -Path $_.FullName
            (Get-Content $_.FullName) -Replace "<WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>","<WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>" | Set-Content -Path $_.FullName
            # Fix SDK and toolset for samples that require newer SDK/toolset. At the moment it is only dx12.
            (Get-Content $_.FullName) -Replace "<PlatformToolset>v140</PlatformToolset>","<PlatformToolset>v142</PlatformToolset>" | Set-Content -Path $_.FullName
            (Get-Content $_.FullName) -Replace "<WindowsTargetPlatformVersion>10.0.14393.0</WindowsTargetPlatformVersion>","<WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>" | Set-Content -Path $_.FullName
          }

      - name: Build ${{ matrix.arch }} test_app
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" test_app/imgui_test_app.vcxproj /p:Platform=${{ matrix.arch }} /p:Configuration=Release'

      - name: Run Tests
        run: |
          test_app/Release/imgui_test_app.exe -nogui -nopause -v2 -ve4 tests

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
          username: GitHub Actions
          color: 0xFF0000
          title: ${{ github.job }}
