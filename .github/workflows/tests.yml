name: tests

on:
  push:
  pull_request:
  workflow_run:
    # Use a workflow as a trigger of scheduled builds. Forked repositories can disable scheduled builds by disabling
    # "scheduled" workflow, while maintaining ability to perform local CI builds.
    workflows:
      - scheduled
    branches:
      - main
    types:
      - requested

jobs:
  Linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
          - docking
          - features/range_select

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: recursive

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libglfw3-dev libsdl2-dev

      - name: Build (with SDL2)
        if: github.event_name == 'workflow_run'
        run: |
          make -C imgui_tests/ clean
          make -C imgui_tests/ BACKEND_LIB=sdl2

      - name: Build (with GLFW3)
        if: github.event_name == 'workflow_run'
        run: |
          make -C imgui_tests/ clean
          make -C imgui_tests/ BACKEND_LIB=glfw3

      - name: Build
        run: |
          make -C imgui_tests/ clean
          make -C imgui_tests/ ASAN=1

      - name: Run Tests
        run: |
          timeout 300 imgui_tests/imgui_tests -nogui -nopause -v2 -ve4 tests

  MacOS:
    runs-on: macos-latest
    if: |
      contains(github.event.head_commit.message, 'Build all') ||
      contains(github.event.head_commit.message, 'Build MacOS') ||
      github.event_name == 'workflow_run'

    strategy:
      fail-fast: false
      matrix:
        # MacOS minutes are expensive (x10) for private repo so reduce the amount of tests running there for now.
        branch: [docking]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: recursive

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Build
        run: |
          make -C imgui_tests/ ASAN=1

      - name: Run Tests
        run: |
          imgui_tests/imgui_tests -nogui -nopause -v2 -ve4 tests

  Windows:
    if: |
      contains(github.event.head_commit.message, 'Build all') ||
      contains(github.event.head_commit.message, 'Build Windows') ||
      github.event_name == 'workflow_run'
    runs-on: windows-latest
    env:
      VS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\

    strategy:
      fail-fast: false
      matrix:
        branch: [docking]
        arch: [Win32, x64]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: recursive

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          repository: ocornut/imgui
          ref: ${{ matrix.branch }}

      - name: Fix Projects
        shell: powershell
        run: |
          # WARNING: This will need updating if toolset/sdk change in project files!
          gci -recurse -filter "*.vcxproj" | ForEach-Object {
            # Fix SDK and toolset for most samples.
            (Get-Content $_.FullName) -Replace "<PlatformToolset>v110</PlatformToolset>","<PlatformToolset>v142</PlatformToolset>" | Set-Content -Path $_.FullName
            (Get-Content $_.FullName) -Replace "<WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>","<WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>" | Set-Content -Path $_.FullName
            # Fix SDK and toolset for samples that require newer SDK/toolset. At the moment it is only dx12.
            (Get-Content $_.FullName) -Replace "<PlatformToolset>v140</PlatformToolset>","<PlatformToolset>v142</PlatformToolset>" | Set-Content -Path $_.FullName
            (Get-Content $_.FullName) -Replace "<WindowsTargetPlatformVersion>10.0.14393.0</WindowsTargetPlatformVersion>","<WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>" | Set-Content -Path $_.FullName
          }

      - name: Build ${{ matrix.arch }} imgui_tests
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" imgui_tests/imgui_tests.vcxproj /p:Platform=${{ matrix.arch }} /p:Configuration=Release'

      - name: Run Tests
        run: |
          imgui_tests/Release/imgui_tests.exe -nogui -nopause -v2 -ve4 tests

  Discord-CI:
    runs-on: ubuntu-latest
    if: always()
    needs: [Windows, Linux, MacOS]
    steps:
    - uses: dearimgui/github_discord_notifier@latest
      with:
        discord-webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
        github-token: ${{ github.token }}
        action-task: discord-jobs
        discord-filter: "'{{ github.branch }}' == 'master' && '{{ run.conclusion }}' != '{{ last_run.conclusion }}'"
        discord-username: GitHub Actions
        discord-job-new-failure-message: ''
        discord-job-fixed-failure-message: ''
        discord-job-new-failure-embed: |
          {
            "title": "`{{ job.name }}` job is failing on `{{ github.branch }}`!",
            "description": "Commit [{{ github.context.payload.head_commit.title }}]({{ github.context.payload.head_commit.url }}) pushed to [{{ github.branch }}]({{ github.branch_url }}) broke [{{ job.name }}]({{ job.url }}) CI job.\nFailing steps: {{ failing_steps }}",
            "url": "{{ job.url }}",
            "color": "0xFF0000",
            "timestamp": "{{ run.updated_at }}"
          }
        discord-job-fixed-failure-embed: |
          {
            "title": "`{{ github.branch }}` branch is no longer failing!",
            "description": "Build failures were fixed on [{{ github.branch }}]({{ github.branch_url }}) branch.",
            "color": "0x00FF00",
            "url": "{{ github.context.payload.head_commit.url }}",
            "timestamp": "{{ run.completed_at }}"
          }
